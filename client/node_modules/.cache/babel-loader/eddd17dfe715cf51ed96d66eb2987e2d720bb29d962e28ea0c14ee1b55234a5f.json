{"ast":null,"code":"// src/services/mockData.js\n// D·ªØ li·ªáu gi·∫£ l·∫≠p ƒë·ªÉ test frontend\n\nexport const mockUsers = [{\n  _id: '1',\n  username: 'Nguy·ªÖn VƒÉn A',\n  email: 'vana@example.com',\n  avatar: 'üë®',\n  online: true\n}, {\n  _id: '2',\n  username: 'Tr·∫ßn Th·ªã B',\n  email: 'thib@example.com',\n  avatar: 'üë©',\n  online: true\n}, {\n  _id: '3',\n  username: 'L√™ VƒÉn C',\n  email: 'vanc@example.com',\n  avatar: 'üë®‚Äçüíº',\n  online: false\n}, {\n  _id: '4',\n  username: 'Ph·∫°m Th·ªã D',\n  email: 'thid@example.com',\n  avatar: 'üë©‚Äçüíª',\n  online: true\n}, {\n  _id: '5',\n  username: 'Ho√†ng VƒÉn E',\n  email: 'vane@example.com',\n  avatar: 'üßë',\n  online: false\n}];\nexport const mockConversations = [{\n  _id: 'conv1',\n  isGroup: false,\n  otherUser: mockUsers[1],\n  lastMessage: {\n    _id: 'msg1',\n    content: 'Ch√†o b·∫°n, b·∫°n kh·ªèe kh√¥ng?',\n    createdAt: new Date().toISOString(),\n    senderId: '2'\n  },\n  unreadCount: 2,\n  members: ['current-user', '2']\n}, {\n  _id: 'conv2',\n  isGroup: true,\n  name: 'Nh√≥m L·∫≠p Tr√¨nh M·∫°ng',\n  members: ['current-user', '2', '3', '4'],\n  lastMessage: {\n    _id: 'msg2',\n    content: 'Ai l√†m b√†i t·∫≠p ch∆∞a?',\n    createdAt: new Date(Date.now() - 3600000).toISOString(),\n    senderId: '3'\n  },\n  unreadCount: 0\n}, {\n  _id: 'conv3',\n  isGroup: false,\n  otherUser: mockUsers[3],\n  lastMessage: {\n    _id: 'msg3',\n    content: 'Meeting l√∫c 3pm nh√©',\n    createdAt: new Date(Date.now() - 7200000).toISOString(),\n    senderId: '4'\n  },\n  unreadCount: 0,\n  members: ['current-user', '4']\n}];\nexport const mockMessages = {\n  'conv1': [{\n    _id: 'msg1-1',\n    conversationId: 'conv1',\n    senderId: '2',\n    sender: mockUsers[1],\n    content: 'Xin ch√†o!',\n    type: 'text',\n    status: 'read',\n    createdAt: new Date(Date.now() - 10000000).toISOString()\n  }, {\n    _id: 'msg1-2',\n    conversationId: 'conv1',\n    senderId: 'current-user',\n    content: 'Ch√†o b·∫°n!',\n    type: 'text',\n    status: 'read',\n    createdAt: new Date(Date.now() - 9000000).toISOString()\n  }, {\n    _id: 'msg1-3',\n    conversationId: 'conv1',\n    senderId: '2',\n    sender: mockUsers[1],\n    content: 'B·∫°n kh·ªèe kh√¥ng?',\n    type: 'text',\n    status: 'delivered',\n    createdAt: new Date(Date.now() - 5000).toISOString()\n  }],\n  'conv2': [{\n    _id: 'msg2-1',\n    conversationId: 'conv2',\n    senderId: '3',\n    sender: mockUsers[2],\n    content: 'H√¥m nay h·ªçc v·ªÅ Socket.IO',\n    type: 'text',\n    status: 'read',\n    createdAt: new Date(Date.now() - 7200000).toISOString()\n  }, {\n    _id: 'msg2-2',\n    conversationId: 'conv2',\n    senderId: '4',\n    sender: mockUsers[3],\n    content: 'C√≥ ai l√†m b√†i t·∫≠p ch∆∞a?',\n    type: 'text',\n    status: 'read',\n    createdAt: new Date(Date.now() - 3600000).toISOString()\n  }],\n  'conv3': [{\n    _id: 'msg3-1',\n    conversationId: 'conv3',\n    senderId: '4',\n    sender: mockUsers[3],\n    content: 'Meeting l√∫c 3pm nh√©',\n    type: 'text',\n    status: 'read',\n    createdAt: new Date(Date.now() - 7200000).toISOString()\n  }]\n};\n\n// Current user\nexport const mockCurrentUser = {\n  _id: 'current-user',\n  username: 'T√¥i',\n  email: 'me@example.com',\n  avatar: 'üòä',\n  token: 'mock-jwt-token-12345'\n};","map":{"version":3,"names":["mockUsers","_id","username","email","avatar","online","mockConversations","isGroup","otherUser","lastMessage","content","createdAt","Date","toISOString","senderId","unreadCount","members","name","now","mockMessages","conversationId","sender","type","status","mockCurrentUser","token"],"sources":["D:/mid-project-582786/source/fe/src/services/mockData.js"],"sourcesContent":["// src/services/mockData.js\r\n// D·ªØ li·ªáu gi·∫£ l·∫≠p ƒë·ªÉ test frontend\r\n\r\nexport const mockUsers = [\r\n  {\r\n    _id: '1',\r\n    username: 'Nguy·ªÖn VƒÉn A',\r\n    email: 'vana@example.com',\r\n    avatar: 'üë®',\r\n    online: true\r\n  },\r\n  {\r\n    _id: '2',\r\n    username: 'Tr·∫ßn Th·ªã B',\r\n    email: 'thib@example.com',\r\n    avatar: 'üë©',\r\n    online: true\r\n  },\r\n  {\r\n    _id: '3',\r\n    username: 'L√™ VƒÉn C',\r\n    email: 'vanc@example.com',\r\n    avatar: 'üë®‚Äçüíº',\r\n    online: false\r\n  },\r\n  {\r\n    _id: '4',\r\n    username: 'Ph·∫°m Th·ªã D',\r\n    email: 'thid@example.com',\r\n    avatar: 'üë©‚Äçüíª',\r\n    online: true\r\n  },\r\n  {\r\n    _id: '5',\r\n    username: 'Ho√†ng VƒÉn E',\r\n    email: 'vane@example.com',\r\n    avatar: 'üßë',\r\n    online: false\r\n  }\r\n];\r\n\r\nexport const mockConversations = [\r\n  {\r\n    _id: 'conv1',\r\n    isGroup: false,\r\n    otherUser: mockUsers[1],\r\n    lastMessage: {\r\n      _id: 'msg1',\r\n      content: 'Ch√†o b·∫°n, b·∫°n kh·ªèe kh√¥ng?',\r\n      createdAt: new Date().toISOString(),\r\n      senderId: '2'\r\n    },\r\n    unreadCount: 2,\r\n    members: ['current-user', '2']\r\n  },\r\n  {\r\n    _id: 'conv2',\r\n    isGroup: true,\r\n    name: 'Nh√≥m L·∫≠p Tr√¨nh M·∫°ng',\r\n    members: ['current-user', '2', '3', '4'],\r\n    lastMessage: {\r\n      _id: 'msg2',\r\n      content: 'Ai l√†m b√†i t·∫≠p ch∆∞a?',\r\n      createdAt: new Date(Date.now() - 3600000).toISOString(),\r\n      senderId: '3'\r\n    },\r\n    unreadCount: 0\r\n  },\r\n  {\r\n    _id: 'conv3',\r\n    isGroup: false,\r\n    otherUser: mockUsers[3],\r\n    lastMessage: {\r\n      _id: 'msg3',\r\n      content: 'Meeting l√∫c 3pm nh√©',\r\n      createdAt: new Date(Date.now() - 7200000).toISOString(),\r\n      senderId: '4'\r\n    },\r\n    unreadCount: 0,\r\n    members: ['current-user', '4']\r\n  }\r\n];\r\n\r\nexport const mockMessages = {\r\n  'conv1': [\r\n    {\r\n      _id: 'msg1-1',\r\n      conversationId: 'conv1',\r\n      senderId: '2',\r\n      sender: mockUsers[1],\r\n      content: 'Xin ch√†o!',\r\n      type: 'text',\r\n      status: 'read',\r\n      createdAt: new Date(Date.now() - 10000000).toISOString()\r\n    },\r\n    {\r\n      _id: 'msg1-2',\r\n      conversationId: 'conv1',\r\n      senderId: 'current-user',\r\n      content: 'Ch√†o b·∫°n!',\r\n      type: 'text',\r\n      status: 'read',\r\n      createdAt: new Date(Date.now() - 9000000).toISOString()\r\n    },\r\n    {\r\n      _id: 'msg1-3',\r\n      conversationId: 'conv1',\r\n      senderId: '2',\r\n      sender: mockUsers[1],\r\n      content: 'B·∫°n kh·ªèe kh√¥ng?',\r\n      type: 'text',\r\n      status: 'delivered',\r\n      createdAt: new Date(Date.now() - 5000).toISOString()\r\n    }\r\n  ],\r\n  'conv2': [\r\n    {\r\n      _id: 'msg2-1',\r\n      conversationId: 'conv2',\r\n      senderId: '3',\r\n      sender: mockUsers[2],\r\n      content: 'H√¥m nay h·ªçc v·ªÅ Socket.IO',\r\n      type: 'text',\r\n      status: 'read',\r\n      createdAt: new Date(Date.now() - 7200000).toISOString()\r\n    },\r\n    {\r\n      _id: 'msg2-2',\r\n      conversationId: 'conv2',\r\n      senderId: '4',\r\n      sender: mockUsers[3],\r\n      content: 'C√≥ ai l√†m b√†i t·∫≠p ch∆∞a?',\r\n      type: 'text',\r\n      status: 'read',\r\n      createdAt: new Date(Date.now() - 3600000).toISOString()\r\n    }\r\n  ],\r\n  'conv3': [\r\n    {\r\n      _id: 'msg3-1',\r\n      conversationId: 'conv3',\r\n      senderId: '4',\r\n      sender: mockUsers[3],\r\n      content: 'Meeting l√∫c 3pm nh√©',\r\n      type: 'text',\r\n      status: 'read',\r\n      createdAt: new Date(Date.now() - 7200000).toISOString()\r\n    }\r\n  ]\r\n};\r\n\r\n// Current user\r\nexport const mockCurrentUser = {\r\n  _id: 'current-user',\r\n  username: 'T√¥i',\r\n  email: 'me@example.com',\r\n  avatar: 'üòä',\r\n  token: 'mock-jwt-token-12345'\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}